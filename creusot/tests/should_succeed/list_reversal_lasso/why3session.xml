<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE why3session PUBLIC "-//Why3//proof session v5//EN"
"http://why3.lri.fr/why3session.dtd">
<why3session shape_version="6">
<prover id="0" name="CVC4" version="1.8" timelimit="1" steplimit="0" memlimit="1000"/>
<prover id="1" name="Z3" version="4.12.1" timelimit="1" steplimit="0" memlimit="1000"/>
<prover id="3" name="Alt-Ergo" version="2.4.2" timelimit="1" steplimit="0" memlimit="1000"/>
<prover id="4" name="CVC5" version="1.0.5" timelimit="5" steplimit="0" memlimit="4000"/>
<file format="mlcfg" proved="true">
<path name=".."/><path name="list_reversal_lasso.mlcfg"/>
<theory name="ListReversalLasso_Impl1_Index" proved="true">
 <goal name="index&#39;vc" expl="VC for index" proved="true">
 <proof prover="0"><result status="valid" time="0.100000" steps="13932"/></proof>
 </goal>
</theory>
<theory name="ListReversalLasso_Impl2_IndexMut" proved="true">
 <goal name="index_mut&#39;vc" expl="VC for index_mut" proved="true">
 <proof prover="0"><result status="valid" time="0.130000" steps="20398"/></proof>
 </goal>
</theory>
<theory name="ListReversalLasso_Impl4_ListReversalSafe" proved="true">
 <goal name="list_reversal_safe&#39;vc" expl="VC for list_reversal_safe" proved="true">
 <proof prover="0" timelimit="5"><result status="valid" time="0.070000" steps="23199"/></proof>
 </goal>
</theory>
<theory name="ListReversalLasso_Impl4_ListReversalList" proved="true">
 <goal name="list_reversal_list&#39;vc" expl="VC for list_reversal_list" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="list_reversal_list&#39;vc.0" expl="loop invariant init" proved="true">
  <proof prover="0"><result status="valid" time="0.090000" steps="15194"/></proof>
  </goal>
  <goal name="list_reversal_list&#39;vc.1" expl="loop invariant init" proved="true">
  <proof prover="0"><result status="valid" time="0.100000" steps="14672"/></proof>
  </goal>
  <goal name="list_reversal_list&#39;vc.2" expl="loop invariant init" proved="true">
  <proof prover="0"><result status="valid" time="0.080000" steps="16751"/></proof>
  </goal>
  <goal name="list_reversal_list&#39;vc.3" expl="postcondition" proved="true">
  <proof prover="3"><result status="valid" time="0.070000" steps="524"/></proof>
  </goal>
  <goal name="list_reversal_list&#39;vc.4" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.110000" steps="17595"/></proof>
  </goal>
  <goal name="list_reversal_list&#39;vc.5" expl="loop invariant preservation" proved="true">
  <proof prover="0"><result status="valid" time="0.110000" steps="17833"/></proof>
  </goal>
  <goal name="list_reversal_list&#39;vc.6" expl="loop invariant preservation" proved="true">
  <proof prover="3" timelimit="5"><result status="valid" time="0.383629" steps="1256"/></proof>
  </goal>
  <goal name="list_reversal_list&#39;vc.7" expl="loop invariant preservation" proved="true">
  <proof prover="3"><result status="valid" time="1.110916" steps="5089"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="ListReversalLasso_Impl4_ListReversalLoop" proved="true">
 <goal name="list_reversal_loop&#39;vc" expl="VC for list_reversal_loop" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="list_reversal_loop&#39;vc.0" expl="loop invariant init" proved="true">
  <proof prover="0"><result status="valid" time="0.080000" steps="14651"/></proof>
  </goal>
  <goal name="list_reversal_loop&#39;vc.1" expl="loop invariant init" proved="true">
  <proof prover="0"><result status="valid" time="0.140000" steps="15515"/></proof>
  </goal>
  <goal name="list_reversal_loop&#39;vc.2" expl="loop invariant init" proved="true">
  <proof prover="0"><result status="valid" time="0.080000" steps="15589"/></proof>
  </goal>
  <goal name="list_reversal_loop&#39;vc.3" expl="loop invariant init" proved="true">
  <proof prover="0"><result status="valid" time="0.110000" steps="17651"/></proof>
  </goal>
  <goal name="list_reversal_loop&#39;vc.4" expl="assertion" proved="true">
  <proof prover="3"><result status="valid" time="0.166864" steps="768"/></proof>
  </goal>
  <goal name="list_reversal_loop&#39;vc.5" expl="postcondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="list_reversal_loop&#39;vc.5.0" expl="postcondition" proved="true">
   <transf name="inline_goal" proved="true" >
    <goal name="list_reversal_loop&#39;vc.5.0.0" expl="postcondition" proved="true">
    <transf name="split_all_full" proved="true" >
     <goal name="list_reversal_loop&#39;vc.5.0.0.0" expl="postcondition" proved="true">
     <transf name="inline_goal" proved="true" >
      <goal name="list_reversal_loop&#39;vc.5.0.0.0.0" expl="postcondition" proved="true">
      <transf name="split_all_full" proved="true" >
       <goal name="list_reversal_loop&#39;vc.5.0.0.0.0.0" expl="VC for list_reversal_loop" proved="true">
       <proof prover="1"><result status="valid" time="0.524633" steps="611473"/></proof>
       </goal>
       <goal name="list_reversal_loop&#39;vc.5.0.0.0.0.1" expl="VC for list_reversal_loop" proved="true">
       <proof prover="3"><result status="valid" time="0.847427" steps="3431"/></proof>
       </goal>
       <goal name="list_reversal_loop&#39;vc.5.0.0.0.0.2" expl="VC for list_reversal_loop" proved="true">
       <transf name="split_vc" proved="true" >
        <goal name="list_reversal_loop&#39;vc.5.0.0.0.0.2.0" expl="VC for list_reversal_loop" proved="true">
        <transf name="inline_goal" proved="true" >
         <goal name="list_reversal_loop&#39;vc.5.0.0.0.0.2.0.0" expl="VC for list_reversal_loop" proved="true">
         <proof prover="3" timelimit="30" memlimit="4000"><result status="valid" time="9.391123" steps="61098"/></proof>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
       <goal name="list_reversal_loop&#39;vc.5.0.0.0.0.3" expl="VC for list_reversal_loop" proved="true">
       <proof prover="3"><result status="valid" time="0.890937" steps="4892"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="list_reversal_loop&#39;vc.6" expl="assertion" proved="true">
  <proof prover="3"><result status="valid" time="0.020000" steps="235"/></proof>
  </goal>
  <goal name="list_reversal_loop&#39;vc.7" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.150000" steps="20583"/></proof>
  </goal>
  <goal name="list_reversal_loop&#39;vc.8" expl="loop invariant preservation" proved="true">
  <proof prover="0" timelimit="5"><result status="valid" time="0.080000" steps="18513"/></proof>
  </goal>
  <goal name="list_reversal_loop&#39;vc.9" expl="loop invariant preservation" proved="true">
  <proof prover="3" timelimit="5"><result status="valid" time="1.534643" steps="7434"/></proof>
  </goal>
  <goal name="list_reversal_loop&#39;vc.10" expl="loop invariant preservation" proved="true">
  <proof prover="3"><result status="valid" time="0.534383" steps="2021"/></proof>
  </goal>
  <goal name="list_reversal_loop&#39;vc.11" expl="loop invariant preservation" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="list_reversal_loop&#39;vc.11.0" expl="loop invariant preservation" proved="true">
   <proof prover="3" timelimit="5" memlimit="2000"><result status="valid" time="1.941004" steps="7962"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="ListReversalLasso_Impl4_ListReversalLasso" proved="true">
 <goal name="list_reversal_lasso&#39;vc" expl="VC for list_reversal_lasso" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="list_reversal_lasso&#39;vc.0" expl="loop invariant init" proved="true">
  <proof prover="0"><result status="valid" time="0.144436" steps="15977"/></proof>
  </goal>
  <goal name="list_reversal_lasso&#39;vc.1" expl="loop invariant init" proved="true">
  <proof prover="0"><result status="valid" time="0.164080" steps="18200"/></proof>
  </goal>
  <goal name="list_reversal_lasso&#39;vc.2" expl="loop invariant init" proved="true">
  <proof prover="0"><result status="valid" time="0.168837" steps="19108"/></proof>
  </goal>
  <goal name="list_reversal_lasso&#39;vc.3" expl="loop invariant init" proved="true">
  <proof prover="0"><result status="valid" time="0.150000" steps="19824"/></proof>
  </goal>
  <goal name="list_reversal_lasso&#39;vc.4" expl="postcondition" proved="true">
  <transf name="unfold" proved="true" arg1="lasso">
   <goal name="list_reversal_lasso&#39;vc.4.0" expl="VC for list_reversal_lasso" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="list_reversal_lasso&#39;vc.4.0.0" expl="VC for list_reversal_lasso" proved="true">
    <proof prover="0"><result status="valid" time="0.182779" steps="19972"/></proof>
    </goal>
    <goal name="list_reversal_lasso&#39;vc.4.0.1" expl="VC for list_reversal_lasso" proved="true">
    <proof prover="3"><result status="valid" time="0.040000" steps="405"/></proof>
    </goal>
    <goal name="list_reversal_lasso&#39;vc.4.0.2" expl="VC for list_reversal_lasso" proved="true">
    <transf name="replace" proved="true" arg1="mid" arg2="mid1">
     <goal name="list_reversal_lasso&#39;vc.4.0.2.0" expl="VC for list_reversal_lasso" proved="true">
     <proof prover="0"><result status="valid" time="0.365737" steps="43186"/></proof>
     </goal>
     <goal name="list_reversal_lasso&#39;vc.4.0.2.1" expl="equality hypothesis" proved="true">
     <proof prover="3"><result status="valid" time="0.040000" steps="465"/></proof>
     </goal>
    </transf>
    </goal>
    <goal name="list_reversal_lasso&#39;vc.4.0.3" expl="VC for list_reversal_lasso" proved="true">
    <transf name="replace" proved="true" arg1="mid" arg2="mid1">
     <goal name="list_reversal_lasso&#39;vc.4.0.3.0" expl="VC for list_reversal_lasso" proved="true">
     <transf name="inline_goal" proved="true" >
      <goal name="list_reversal_lasso&#39;vc.4.0.3.0.0" expl="VC for list_reversal_lasso" proved="true">
      <transf name="split_all_full" proved="true" >
       <goal name="list_reversal_lasso&#39;vc.4.0.3.0.0.0" expl="VC for list_reversal_lasso" proved="true">
       <proof prover="3"><result status="valid" time="0.072433" steps="516"/></proof>
       </goal>
       <goal name="list_reversal_lasso&#39;vc.4.0.3.0.0.1" expl="VC for list_reversal_lasso" proved="true">
       <proof prover="3"><result status="valid" time="0.101103" steps="747"/></proof>
       </goal>
       <goal name="list_reversal_lasso&#39;vc.4.0.3.0.0.2" expl="VC for list_reversal_lasso" proved="true">
       <transf name="split_vc" proved="true" >
        <goal name="list_reversal_lasso&#39;vc.4.0.3.0.0.2.0" expl="VC for list_reversal_lasso" proved="true">
        <transf name="inline_goal" proved="true" >
         <goal name="list_reversal_lasso&#39;vc.4.0.3.0.0.2.0.0" expl="VC for list_reversal_lasso" proved="true">
         <proof prover="4" timelimit="30"><result status="valid" time="2.831824" steps="177454"/></proof>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
       <goal name="list_reversal_lasso&#39;vc.4.0.3.0.0.3" expl="VC for list_reversal_lasso" proved="true">
       <proof prover="3"><result status="valid" time="0.073812" steps="412"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
     <goal name="list_reversal_lasso&#39;vc.4.0.3.1" expl="equality hypothesis" proved="true">
     <proof prover="3"><result status="valid" time="0.040000" steps="465"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="list_reversal_lasso&#39;vc.5" expl="precondition" proved="true">
  <proof prover="3" timelimit="5"><result status="valid" time="0.230696" steps="1077"/></proof>
  </goal>
  <goal name="list_reversal_lasso&#39;vc.6" expl="loop invariant preservation" proved="true">
  <proof prover="0" timelimit="5"><result status="valid" time="0.190000" steps="20764"/></proof>
  </goal>
  <goal name="list_reversal_lasso&#39;vc.7" expl="loop invariant preservation" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="list_reversal_lasso&#39;vc.7.0" expl="loop invariant preservation" proved="true">
   <transf name="inline_goal" proved="true" >
    <goal name="list_reversal_lasso&#39;vc.7.0.0" expl="loop invariant preservation" proved="true">
    <transf name="split_all_full" proved="true" >
     <goal name="list_reversal_lasso&#39;vc.7.0.0.0" expl="VC for list_reversal_lasso" proved="true">
     <proof prover="3"><result status="valid" time="0.120000" steps="547"/></proof>
     </goal>
     <goal name="list_reversal_lasso&#39;vc.7.0.0.1" expl="VC for list_reversal_lasso" proved="true">
     <proof prover="3"><result status="valid" time="0.184476" steps="837"/></proof>
     </goal>
     <goal name="list_reversal_lasso&#39;vc.7.0.0.2" expl="VC for list_reversal_lasso" proved="true">
     <transf name="split_vc" proved="true" >
      <goal name="list_reversal_lasso&#39;vc.7.0.0.2.0" expl="VC for list_reversal_lasso" proved="true">
      <transf name="inline_goal" proved="true" >
       <goal name="list_reversal_lasso&#39;vc.7.0.0.2.0.0" expl="VC for list_reversal_lasso" proved="true">
       <proof prover="3" timelimit="30" memlimit="4000"><result status="valid" time="0.204394" steps="942"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
     <goal name="list_reversal_lasso&#39;vc.7.0.0.3" expl="VC for list_reversal_lasso" proved="true">
     <proof prover="3"><result status="valid" time="0.060000" steps="298"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="list_reversal_lasso&#39;vc.7.1" expl="loop invariant preservation" proved="true">
   <proof prover="1"><result status="valid" time="1.129539" steps="1384171"/></proof>
   </goal>
   <goal name="list_reversal_lasso&#39;vc.7.2" expl="loop invariant preservation" proved="true">
   <transf name="inline_goal" proved="true" >
    <goal name="list_reversal_lasso&#39;vc.7.2.0" expl="loop invariant preservation" proved="true">
    <transf name="split_all_full" proved="true" >
     <goal name="list_reversal_lasso&#39;vc.7.2.0.0" expl="VC for list_reversal_lasso" proved="true">
     <proof prover="3"><result status="valid" time="0.100000" steps="465"/></proof>
     </goal>
     <goal name="list_reversal_lasso&#39;vc.7.2.0.1" expl="VC for list_reversal_lasso" proved="true">
     <proof prover="3"><result status="valid" time="0.286908" steps="1169"/></proof>
     </goal>
     <goal name="list_reversal_lasso&#39;vc.7.2.0.2" expl="VC for list_reversal_lasso" proved="true">
     <proof prover="3"><result status="valid" time="0.596068" steps="2477"/></proof>
     </goal>
     <goal name="list_reversal_lasso&#39;vc.7.2.0.3" expl="VC for list_reversal_lasso" proved="true">
     <proof prover="3"><result status="valid" time="0.147772" steps="526"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="list_reversal_lasso&#39;vc.8" expl="loop invariant preservation" proved="true">
  <transf name="inline_goal" proved="true" >
   <goal name="list_reversal_lasso&#39;vc.8.0" expl="loop invariant preservation" proved="true">
   <transf name="split_all_full" proved="true" >
    <goal name="list_reversal_lasso&#39;vc.8.0.0" expl="VC for list_reversal_lasso" proved="true">
    <proof prover="3"><result status="valid" time="0.284338" steps="1346"/></proof>
    </goal>
    <goal name="list_reversal_lasso&#39;vc.8.0.1" expl="VC for list_reversal_lasso" proved="true">
    <proof prover="3"><result status="valid" time="1.706472" steps="5965"/></proof>
    </goal>
    <goal name="list_reversal_lasso&#39;vc.8.0.2" expl="VC for list_reversal_lasso" proved="true">
    <proof prover="3"><result status="valid" time="0.218390" steps="1250"/></proof>
    </goal>
    <goal name="list_reversal_lasso&#39;vc.8.0.3" expl="VC for list_reversal_lasso" proved="true">
    <proof prover="3"><result status="valid" time="0.152323" steps="536"/></proof>
    </goal>
    <goal name="list_reversal_lasso&#39;vc.8.0.4" expl="VC for list_reversal_lasso" proved="true">
    <proof prover="3"><result status="valid" time="0.377853" steps="1523"/></proof>
    </goal>
    <goal name="list_reversal_lasso&#39;vc.8.0.5" expl="VC for list_reversal_lasso" proved="true">
    <proof prover="3"><result status="valid" time="1.814898" steps="5899"/></proof>
    </goal>
    <goal name="list_reversal_lasso&#39;vc.8.0.6" expl="VC for list_reversal_lasso" proved="true">
    <proof prover="3"><result status="valid" time="1.017286" steps="4278"/></proof>
    </goal>
    <goal name="list_reversal_lasso&#39;vc.8.0.7" expl="VC for list_reversal_lasso" proved="true">
    <proof prover="3"><result status="valid" time="0.270640" steps="955"/></proof>
    </goal>
    <goal name="list_reversal_lasso&#39;vc.8.0.8" expl="VC for list_reversal_lasso" proved="true">
    <proof prover="3"><result status="valid" time="0.278791" steps="1223"/></proof>
    </goal>
    <goal name="list_reversal_lasso&#39;vc.8.0.9" expl="VC for list_reversal_lasso" proved="true">
    <proof prover="1"><result status="valid" time="0.359073" steps="467227"/></proof>
    </goal>
    <goal name="list_reversal_lasso&#39;vc.8.0.10" expl="VC for list_reversal_lasso" proved="true">
    <proof prover="3"><result status="valid" time="0.691249" steps="2438"/></proof>
    </goal>
    <goal name="list_reversal_lasso&#39;vc.8.0.11" expl="VC for list_reversal_lasso" proved="true">
    <proof prover="3"><result status="valid" time="0.139036" steps="540"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="list_reversal_lasso&#39;vc.9" expl="loop invariant preservation" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="list_reversal_lasso&#39;vc.9.0" expl="loop invariant preservation" proved="true">
   <transf name="inline_goal" proved="true" >
    <goal name="list_reversal_lasso&#39;vc.9.0.0" expl="loop invariant preservation" proved="true">
    <transf name="split_all_full" proved="true" >
     <goal name="list_reversal_lasso&#39;vc.9.0.0.0" expl="VC for list_reversal_lasso" proved="true">
     <proof prover="3" timelimit="30" memlimit="4000"><result status="valid" time="2.301428" steps="9351"/></proof>
     </goal>
     <goal name="list_reversal_lasso&#39;vc.9.0.0.1" expl="VC for list_reversal_lasso" proved="true">
     <transf name="split_vc" proved="true" >
      <goal name="list_reversal_lasso&#39;vc.9.0.0.1.0" expl="VC for list_reversal_lasso" proved="true">
      <transf name="inline_goal" proved="true" >
       <goal name="list_reversal_lasso&#39;vc.9.0.0.1.0.0" expl="VC for list_reversal_lasso" proved="true">
       <transf name="split_all_full" proved="true" >
        <goal name="list_reversal_lasso&#39;vc.9.0.0.1.0.0.0" expl="VC for list_reversal_lasso" proved="true">
        <proof prover="3"><result status="valid" time="0.060000" steps="115"/></proof>
        </goal>
        <goal name="list_reversal_lasso&#39;vc.9.0.0.1.0.0.1" expl="VC for list_reversal_lasso" proved="true">
        <proof prover="3" timelimit="30" memlimit="4000"><result status="valid" time="8.527364" steps="60346"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
     <goal name="list_reversal_lasso&#39;vc.9.0.0.2" expl="VC for list_reversal_lasso" proved="true">
     <transf name="split_vc" proved="true" >
      <goal name="list_reversal_lasso&#39;vc.9.0.0.2.0" expl="VC for list_reversal_lasso" proved="true">
      <transf name="inline_goal" proved="true" >
       <goal name="list_reversal_lasso&#39;vc.9.0.0.2.0.0" expl="VC for list_reversal_lasso" proved="true">
       <proof prover="3" timelimit="30" memlimit="4000"><result status="valid" time="0.816520" steps="2929"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
     <goal name="list_reversal_lasso&#39;vc.9.0.0.3" expl="VC for list_reversal_lasso" proved="true">
     <proof prover="3"><result status="valid" time="0.246131" steps="752"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="list_reversal_lasso&#39;vc.9.1" expl="loop invariant preservation" proved="true">
   <transf name="inline_goal" proved="true" >
    <goal name="list_reversal_lasso&#39;vc.9.1.0" expl="loop invariant preservation" proved="true">
    <transf name="split_all_full" proved="true" >
     <goal name="list_reversal_lasso&#39;vc.9.1.0.0" expl="VC for list_reversal_lasso" proved="true">
     <proof prover="3" timelimit="5" memlimit="2000"><result status="valid" time="0.287859" steps="1074"/></proof>
     </goal>
     <goal name="list_reversal_lasso&#39;vc.9.1.0.1" expl="VC for list_reversal_lasso" proved="true">
     <transf name="split_vc" proved="true" >
      <goal name="list_reversal_lasso&#39;vc.9.1.0.1.0" expl="VC for list_reversal_lasso" proved="true">
      <transf name="inline_goal" proved="true" >
       <goal name="list_reversal_lasso&#39;vc.9.1.0.1.0.0" expl="VC for list_reversal_lasso" proved="true">
       <transf name="split_all_full" proved="true" >
        <goal name="list_reversal_lasso&#39;vc.9.1.0.1.0.0.0" expl="VC for list_reversal_lasso" proved="true">
        <proof prover="3"><result status="valid" time="0.045678" steps="115"/></proof>
        </goal>
        <goal name="list_reversal_lasso&#39;vc.9.1.0.1.0.0.1" expl="VC for list_reversal_lasso" proved="true">
        <proof prover="3"><result status="valid" time="1.897177" steps="7538"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
     <goal name="list_reversal_lasso&#39;vc.9.1.0.2" expl="VC for list_reversal_lasso" proved="true">
     <proof prover="3"><result status="valid" time="1.310272" steps="4377"/></proof>
     </goal>
     <goal name="list_reversal_lasso&#39;vc.9.1.0.3" expl="VC for list_reversal_lasso" proved="true">
     <proof prover="0"><result status="valid" time="0.737291" steps="59448"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="list_reversal_lasso&#39;vc.9.2" expl="loop invariant preservation" proved="true">
   <transf name="inline_goal" proved="true" >
    <goal name="list_reversal_lasso&#39;vc.9.2.0" expl="loop invariant preservation" proved="true">
    <transf name="split_all_full" proved="true" >
     <goal name="list_reversal_lasso&#39;vc.9.2.0.0" expl="VC for list_reversal_lasso" proved="true">
     <proof prover="3"><result status="valid" time="0.196714" steps="803"/></proof>
     </goal>
     <goal name="list_reversal_lasso&#39;vc.9.2.0.1" expl="VC for list_reversal_lasso" proved="true">
     <proof prover="0"><result status="valid" time="0.578007" steps="58197"/></proof>
     </goal>
     <goal name="list_reversal_lasso&#39;vc.9.2.0.2" expl="VC for list_reversal_lasso" proved="true">
     <proof prover="3"><result status="valid" time="1.574666" steps="6782"/></proof>
     </goal>
     <goal name="list_reversal_lasso&#39;vc.9.2.0.3" expl="VC for list_reversal_lasso" proved="true">
     <proof prover="0"><result status="valid" time="0.289377" steps="30629"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="ListReversalLasso_Impl4_FindPtrInSeq_Impl" proved="true">
 <goal name="find_ptr_in_seq&#39;vc" expl="VC for find_ptr_in_seq" proved="true">
 <proof prover="0" timelimit="5"><result status="valid" time="0.070000" steps="15617"/></proof>
 </goal>
</theory>
<theory name="ListReversalLasso_Impl4_Pigeon_Impl" proved="true">
 <goal name="pigeon&#39;vc" expl="VC for pigeon" proved="true">
 <proof prover="1" timelimit="5"><result status="valid" time="1.198555" steps="1921058"/></proof>
 </goal>
</theory>
<theory name="ListReversalLasso_Impl4_FindLassoAux_Impl" proved="true">
 <goal name="find_lasso_aux&#39;vc" expl="VC for find_lasso_aux" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="find_lasso_aux&#39;vc.0" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.010000" steps="16"/></proof>
  </goal>
  <goal name="find_lasso_aux&#39;vc.1" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.010000" steps="25"/></proof>
  </goal>
  <goal name="find_lasso_aux&#39;vc.2" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.424819" steps="1767"/></proof>
  </goal>
  <goal name="find_lasso_aux&#39;vc.3" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.010000" steps="94"/></proof>
  </goal>
  <goal name="find_lasso_aux&#39;vc.4" expl="variant decrease" proved="true">
  <proof prover="3"><result status="valid" time="0.000000" steps="28"/></proof>
  </goal>
  <goal name="find_lasso_aux&#39;vc.5" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.000000" steps="28"/></proof>
  </goal>
  <goal name="find_lasso_aux&#39;vc.6" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.010000" steps="102"/></proof>
  </goal>
  <goal name="find_lasso_aux&#39;vc.7" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.638369" steps="793731"/></proof>
  </goal>
  <goal name="find_lasso_aux&#39;vc.8" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="0.474313" steps="576961"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="ListReversalLasso_Impl4_FindLasso_Impl" proved="true">
 <goal name="find_lasso&#39;vc" expl="VC for find_lasso" proved="true">
 <proof prover="4" memlimit="1000"><result status="valid" time="0.070000" steps="13201"/></proof>
 </goal>
</theory>
</file>
</why3session>

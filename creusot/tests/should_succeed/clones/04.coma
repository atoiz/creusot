
module C04_F
  let%span s040 = "../04.rs" 20 11 20 15
  let%span span1 = "../04.rs" 7 4 7 12
  let%span span2 = "../04.rs" 12 4 12 21
  let%span span3 = "../04.rs" 17 4 17 21
  use prelude.UInt32
  use prelude.Int
  function a'0 [#"../04.rs" 6 0 6 20] (x : uint32) : bool =
    [%#span1] x > (0 : uint32)
  let rec a'0 (x:uint32) (return'  (ret:bool))= any [ return' (result:bool)-> {result = a'0 x} (! return' {result}) ] 
  function b'0 [#"../04.rs" 11 0 11 20] (x : uint32) : bool =
    [%#span2] x > (10 : uint32) /\ a'0 x
  let rec b'0 (x:uint32) (return'  (ret:bool))= any [ return' (result:bool)-> {result = b'0 x} (! return' {result}) ] 
  function c'0 [#"../04.rs" 16 0 16 20] (x : uint32) : bool =
    [%#span3] x < (50 : uint32) /\ b'0 x
  let rec c'0 (x:uint32) (return'  (ret:bool))= any [ return' (result:bool)-> {result = c'0 x} (! return' {result}) ] 
  use prelude.Intrinsic
  let rec f (x:uint32) (return'  (ret:()))= {[%#s040] c'0 x}
    (! bb0 [ bb0 = return' {_0} ] ) [ & _0 : () = any_l () ]  [ return' (result:())-> (! return' {result}) ] 
end

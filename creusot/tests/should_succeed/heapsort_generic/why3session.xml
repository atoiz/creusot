<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE why3session PUBLIC "-//Why3//proof session v5//EN"
"http://why3.lri.fr/why3session.dtd">
<why3session shape_version="6">
<prover id="0" name="CVC4" version="1.8" timelimit="30" steplimit="0" memlimit="4000"/>
<prover id="1" name="Alt-Ergo" version="2.4.2" timelimit="1" steplimit="0" memlimit="1000"/>
<prover id="3" name="CVC5" version="1.0.5" timelimit="1" steplimit="0" memlimit="1000"/>
<prover id="4" name="Z3" version="4.12.1" timelimit="1" steplimit="0" memlimit="1000"/>
<file format="mlcfg" proved="true">
<path name=".."/><path name="heapsort_generic.mlcfg"/>
<theory name="HeapsortGeneric_HeapFragMax_Impl" proved="true">
 <goal name="heap_frag_max&#39;vc" expl="VC for heap_frag_max" proved="true">
 <proof prover="1"><result status="valid" time="0.050000" steps="414"/></proof>
 </goal>
</theory>
<theory name="HeapsortGeneric_SiftDown" proved="true">
 <goal name="sift_down&#39;vc" expl="VC for sift_down" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="sift_down&#39;vc.0" expl="loop invariant init" proved="true">
  <proof prover="1"><result status="valid" time="0.010000" steps="49"/></proof>
  </goal>
  <goal name="sift_down&#39;vc.1" expl="loop invariant init" proved="true">
  <proof prover="1"><result status="valid" time="0.010000" steps="16"/></proof>
  </goal>
  <goal name="sift_down&#39;vc.2" expl="loop invariant init" proved="true">
  <proof prover="1"><result status="valid" time="0.010000" steps="24"/></proof>
  </goal>
  <goal name="sift_down&#39;vc.3" expl="loop invariant init" proved="true">
  <proof prover="1"><result status="valid" time="0.020000" steps="61"/></proof>
  </goal>
  <goal name="sift_down&#39;vc.4" expl="loop invariant init" proved="true">
  <proof prover="4"><result status="valid" time="0.030000" steps="154719"/></proof>
  </goal>
  <goal name="sift_down&#39;vc.5" expl="loop invariant init" proved="true">
  <proof prover="1"><result status="valid" time="0.010000" steps="293"/></proof>
  </goal>
  <goal name="sift_down&#39;vc.6" expl="loop invariant init" proved="true">
  <proof prover="4"><result status="valid" time="0.030000" steps="166023"/></proof>
  </goal>
  <goal name="sift_down&#39;vc.7" expl="division by zero" proved="true">
  <proof prover="1"><result status="valid" time="0.010000" steps="31"/></proof>
  </goal>
  <goal name="sift_down&#39;vc.8" expl="division by zero" proved="true">
  <proof prover="1"><result status="valid" time="0.010000" steps="35"/></proof>
  </goal>
  <goal name="sift_down&#39;vc.9" expl="integer overflow" proved="true">
  <proof prover="4"><result status="valid" time="0.030000" steps="160259"/></proof>
  </goal>
  <goal name="sift_down&#39;vc.10" expl="integer overflow" proved="true">
  <proof prover="1"><result status="valid" time="0.020000" steps="441"/></proof>
  </goal>
  <goal name="sift_down&#39;vc.11" expl="integer overflow" proved="true">
  <proof prover="1"><result status="valid" time="0.020000" steps="441"/></proof>
  </goal>
  <goal name="sift_down&#39;vc.12" expl="integer overflow" proved="true">
  <proof prover="1"><result status="valid" time="0.010000" steps="522"/></proof>
  </goal>
  <goal name="sift_down&#39;vc.13" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.030000" steps="165829"/></proof>
  </goal>
  <goal name="sift_down&#39;vc.14" expl="integer overflow" proved="true">
  <proof prover="1"><result status="valid" time="0.010000" steps="133"/></proof>
  </goal>
  <goal name="sift_down&#39;vc.15" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.030000" steps="166614"/></proof>
  </goal>
  <goal name="sift_down&#39;vc.16" expl="integer overflow" proved="true">
  <proof prover="4"><result status="valid" time="0.030000" steps="170043"/></proof>
  </goal>
  <goal name="sift_down&#39;vc.17" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.040000" steps="606"/></proof>
  </goal>
  <goal name="sift_down&#39;vc.18" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.030000" steps="167191"/></proof>
  </goal>
  <goal name="sift_down&#39;vc.19" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.030000" steps="172207"/></proof>
  </goal>
  <goal name="sift_down&#39;vc.20" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.040000" steps="259613"/></proof>
  </goal>
  <goal name="sift_down&#39;vc.21" expl="loop invariant preservation" proved="true">
  <proof prover="4"><result status="valid" time="0.030000" steps="179665"/></proof>
  </goal>
  <goal name="sift_down&#39;vc.22" expl="loop invariant preservation" proved="true">
  <proof prover="1"><result status="valid" time="0.040000" steps="710"/></proof>
  </goal>
  <goal name="sift_down&#39;vc.23" expl="loop invariant preservation" proved="true">
  <proof prover="3"><result status="valid" time="0.351489" steps="38746"/></proof>
  </goal>
  <goal name="sift_down&#39;vc.24" expl="loop invariant preservation" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="sift_down&#39;vc.24.0" expl="loop invariant preservation" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="sift_down&#39;vc.24.0.0" expl="loop invariant preservation" proved="true">
    <proof prover="0"><result status="valid" time="1.239113" steps="112183"/></proof>
    </goal>
    <goal name="sift_down&#39;vc.24.0.1" expl="loop invariant preservation" proved="true">
    <proof prover="0"><result status="valid" time="1.543319" steps="141666"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="sift_down&#39;vc.24.1" expl="loop invariant preservation" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="sift_down&#39;vc.24.1.0" expl="loop invariant preservation" proved="true">
    <proof prover="0"><result status="valid" time="2.487409" steps="177384"/></proof>
    </goal>
    <goal name="sift_down&#39;vc.24.1.1" expl="loop invariant preservation" proved="true">
    <proof prover="0"><result status="valid" time="0.123682" steps="34376"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="sift_down&#39;vc.25" expl="loop invariant preservation" proved="true">
  <proof prover="3"><result status="valid" time="1.277899" steps="76183"/></proof>
  </goal>
  <goal name="sift_down&#39;vc.26" expl="loop invariant preservation" proved="true">
  <proof prover="3"><result status="valid" time="1.098085" steps="65138"/></proof>
  </goal>
  <goal name="sift_down&#39;vc.27" expl="loop invariant preservation" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="sift_down&#39;vc.27.0" expl="loop invariant preservation" proved="true">
   <proof prover="3"><result status="valid" time="1.144008" steps="77657"/></proof>
   </goal>
   <goal name="sift_down&#39;vc.27.1" expl="loop invariant preservation" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="sift_down&#39;vc.27.1.0" expl="loop invariant preservation" proved="true">
    <proof prover="3"><result status="valid" time="1.192223" steps="71060"/></proof>
    </goal>
    <goal name="sift_down&#39;vc.27.1.1" expl="loop invariant preservation" proved="true">
    <proof prover="1" timelimit="5" memlimit="2000"><result status="valid" time="0.045506" steps="49"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="sift_down&#39;vc.28" expl="postcondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="sift_down&#39;vc.28.0" expl="postcondition" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="sift_down&#39;vc.28.0.0" expl="postcondition" proved="true">
    <transf name="split_vc" proved="true" >
     <goal name="sift_down&#39;vc.28.0.0.0" expl="postcondition" proved="true">
     <proof prover="3"><result status="valid" time="0.812072" steps="52994"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="sift_down&#39;vc.28.1" expl="postcondition" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="sift_down&#39;vc.28.1.0" expl="postcondition" proved="true">
    <transf name="split_vc" proved="true" >
     <goal name="sift_down&#39;vc.28.1.0.0" expl="postcondition" proved="true">
     <proof prover="0" timelimit="1" memlimit="1000"><result status="valid" time="1.280886" steps="99955"/></proof>
     </goal>
     <goal name="sift_down&#39;vc.28.1.0.1" expl="postcondition" proved="true">
     <proof prover="3"><result status="valid" time="1.143933" steps="83825"/></proof>
     </goal>
    </transf>
    </goal>
    <goal name="sift_down&#39;vc.28.1.1" expl="postcondition" proved="true">
    <transf name="split_vc" proved="true" >
     <goal name="sift_down&#39;vc.28.1.1.0" expl="postcondition" proved="true">
     <proof prover="3"><result status="valid" time="1.061438" steps="67386"/></proof>
     </goal>
     <goal name="sift_down&#39;vc.28.1.1.1" expl="postcondition" proved="true">
     <proof prover="3"><result status="valid" time="0.212369" steps="21820"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="sift_down&#39;vc.29" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="0.030000" steps="354"/></proof>
  </goal>
  <goal name="sift_down&#39;vc.30" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="0.134008" steps="443"/></proof>
  </goal>
  <goal name="sift_down&#39;vc.31" expl="postcondition" proved="true">
  <proof prover="3"><result status="valid" time="0.378258" steps="33654"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="HeapsortGeneric_HeapSort" proved="true">
 <goal name="heap_sort&#39;vc" expl="VC for heap_sort" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="heap_sort&#39;vc.0" expl="division by zero" proved="true">
  <proof prover="1"><result status="valid" time="0.050000" steps="15"/></proof>
  </goal>
  <goal name="heap_sort&#39;vc.1" expl="division by zero" proved="true">
  <proof prover="1"><result status="valid" time="0.030000" steps="19"/></proof>
  </goal>
  <goal name="heap_sort&#39;vc.2" expl="integer overflow" proved="true">
  <proof prover="1"><result status="valid" time="0.070000" steps="71"/></proof>
  </goal>
  <goal name="heap_sort&#39;vc.3" expl="loop invariant init" proved="true">
  <proof prover="1"><result status="valid" time="0.050000" steps="249"/></proof>
  </goal>
  <goal name="heap_sort&#39;vc.4" expl="loop invariant init" proved="true">
  <proof prover="1"><result status="valid" time="0.070000" steps="469"/></proof>
  </goal>
  <goal name="heap_sort&#39;vc.5" expl="loop invariant init" proved="true">
  <proof prover="1"><result status="valid" time="0.050000" steps="111"/></proof>
  </goal>
  <goal name="heap_sort&#39;vc.6" expl="integer overflow" proved="true">
  <proof prover="1"><result status="valid" time="0.050000" steps="123"/></proof>
  </goal>
  <goal name="heap_sort&#39;vc.7" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.020000" steps="149"/></proof>
  </goal>
  <goal name="heap_sort&#39;vc.8" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.070000" steps="180"/></proof>
  </goal>
  <goal name="heap_sort&#39;vc.9" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.030000" steps="155"/></proof>
  </goal>
  <goal name="heap_sort&#39;vc.10" expl="loop invariant preservation" proved="true">
  <proof prover="1"><result status="valid" time="0.309388" steps="1107"/></proof>
  </goal>
  <goal name="heap_sort&#39;vc.11" expl="loop invariant preservation" proved="true">
  <proof prover="1"><result status="valid" time="0.130000" steps="584"/></proof>
  </goal>
  <goal name="heap_sort&#39;vc.12" expl="loop invariant preservation" proved="true">
  <proof prover="1"><result status="valid" time="0.160000" steps="754"/></proof>
  </goal>
  <goal name="heap_sort&#39;vc.13" expl="loop invariant init" proved="true">
  <proof prover="1"><result status="valid" time="0.070000" steps="131"/></proof>
  </goal>
  <goal name="heap_sort&#39;vc.14" expl="loop invariant init" proved="true">
  <proof prover="1"><result status="valid" time="0.010000" steps="35"/></proof>
  </goal>
  <goal name="heap_sort&#39;vc.15" expl="loop invariant init" proved="true">
  <proof prover="1"><result status="valid" time="0.040000" steps="156"/></proof>
  </goal>
  <goal name="heap_sort&#39;vc.16" expl="loop invariant init" proved="true">
  <proof prover="1"><result status="valid" time="0.080000" steps="222"/></proof>
  </goal>
  <goal name="heap_sort&#39;vc.17" expl="loop invariant init" proved="true">
  <proof prover="1"><result status="valid" time="0.060000" steps="143"/></proof>
  </goal>
  <goal name="heap_sort&#39;vc.18" expl="integer overflow" proved="true">
  <proof prover="1"><result status="valid" time="0.060000" steps="150"/></proof>
  </goal>
  <goal name="heap_sort&#39;vc.19" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.040000" steps="169"/></proof>
  </goal>
  <goal name="heap_sort&#39;vc.20" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.060000" steps="171"/></proof>
  </goal>
  <goal name="heap_sort&#39;vc.21" expl="assertion" proved="true">
  <proof prover="0" timelimit="10"><result status="valid" time="1.611368" steps="317037"/></proof>
  </goal>
  <goal name="heap_sort&#39;vc.22" expl="precondition" proved="true">
  <proof prover="0" timelimit="5" memlimit="2000"><result status="valid" time="0.340331" steps="48311"/></proof>
  </goal>
  <goal name="heap_sort&#39;vc.23" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.060000" steps="69"/></proof>
  </goal>
  <goal name="heap_sort&#39;vc.24" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.090000" steps="184"/></proof>
  </goal>
  <goal name="heap_sort&#39;vc.25" expl="loop invariant preservation" proved="true">
  <proof prover="1"><result status="valid" time="0.160000" steps="696"/></proof>
  </goal>
  <goal name="heap_sort&#39;vc.26" expl="loop invariant preservation" proved="true">
  <proof prover="1"><result status="valid" time="0.321389" steps="1384"/></proof>
  </goal>
  <goal name="heap_sort&#39;vc.27" expl="loop invariant preservation" proved="true">
  <proof prover="1"><result status="valid" time="0.110000" steps="189"/></proof>
  </goal>
  <goal name="heap_sort&#39;vc.28" expl="loop invariant preservation" proved="true">
  <transf name="remove" proved="true" arg1="to_int_in_bounds,extensionality,zero_unsigned_is_zero,(==)&#39;spec,create&#39;spec,set&#39;spec,set&#39;def,([&lt;-])&#39;def,singleton&#39;spec,cons&#39;spec,snoc&#39;spec,([..])&#39;spec,([..])&#39;def,([_..])&#39;def,([.._])&#39;def,(++)&#39;spec,mem_append,mem_tail,occ_cons,occ_snoc,occ_tail,append_num_occ">
   <goal name="heap_sort&#39;vc.28.0" expl="loop invariant preservation" proved="true">
   <proof prover="0" timelimit="1" memlimit="1000"><result status="valid" time="1.018581" steps="170149"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="heap_sort&#39;vc.29" expl="loop invariant preservation" proved="true">
  <proof prover="4"><result status="valid" time="0.874377" steps="9351342"/></proof>
  </goal>
  <goal name="heap_sort&#39;vc.30" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="0.180000" steps="1087"/></proof>
  </goal>
  <goal name="heap_sort&#39;vc.31" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="0.070000" steps="145"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
</file>
</why3session>

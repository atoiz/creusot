
module Core_Ptr_NonNull_NonNull_Type
  use prelude.Opaque
  type t_nonnull 't =
    | C_NonNull opaque_ptr
    
  function any_l (_ : 'b) : 'a
  let rec t_nonnull < 't > (input:t_nonnull 't) (ret  (pointer:opaque_ptr))= any
    [ good (pointer:opaque_ptr)-> {C_NonNull pointer = input} (! ret {pointer})
    | bad (pointer:opaque_ptr)-> {C_NonNull pointer <> input} {false} any ]
    
end
module Core_Marker_PhantomData_Type
  type t_phantomdata 't =
    | C_PhantomData
    
  function any_l (_ : 'b) : 'a
  let rec t_phantomdata < 't > (input:t_phantomdata 't) (ret  )= any
    [ good -> {C_PhantomData  = input} (! ret) | bad -> {C_PhantomData  <> input} {false} any ]
    
end
module Core_Ptr_Unique_Unique_Type
  use Core_Marker_PhantomData_Type as Core_Marker_PhantomData_Type
  use Core_Ptr_NonNull_NonNull_Type as Core_Ptr_NonNull_NonNull_Type
  type t_unique 't =
    | C_Unique (Core_Ptr_NonNull_NonNull_Type.t_nonnull 't) (Core_Marker_PhantomData_Type.t_phantomdata 't)
    
  function any_l (_ : 'b) : 'a
  let rec t_unique < 't > (input:t_unique 't) (ret  (pointer:Core_Ptr_NonNull_NonNull_Type.t_nonnull 't) (_marker:Core_Marker_PhantomData_Type.t_phantomdata 't))= any
    [ good (pointer:Core_Ptr_NonNull_NonNull_Type.t_nonnull 't) (_marker:Core_Marker_PhantomData_Type.t_phantomdata 't)-> {C_Unique pointer _marker
      = input}
      (! ret {pointer} {_marker})
    | bad (pointer:Core_Ptr_NonNull_NonNull_Type.t_nonnull 't) (_marker:Core_Marker_PhantomData_Type.t_phantomdata 't)-> {C_Unique pointer _marker
      <> input}
      {false}
      any ]
    
end
module Alloc_RawVec_Cap_Type
  use prelude.UIntSize
  use prelude.Int
  type t_cap  =
    | C_Cap usize
    
  function any_l (_ : 'b) : 'a
  let rec t_cap (input:t_cap) (ret  (field_0:usize))= any
    [ good (field_0:usize)-> {C_Cap field_0 = input} (! ret {field_0})
    | bad (field_0:usize)-> {C_Cap field_0 <> input} {false} any ]
    
end
module Alloc_RawVec_RawVec_Type
  use Alloc_RawVec_Cap_Type as Alloc_RawVec_Cap_Type
  use Core_Ptr_Unique_Unique_Type as Core_Ptr_Unique_Unique_Type
  type t_rawvec 't 'a =
    | C_RawVec (Core_Ptr_Unique_Unique_Type.t_unique 't) (Alloc_RawVec_Cap_Type.t_cap) 'a
    
  function any_l (_ : 'b) : 'a
  let rec t_rawvec < 't > < 'a > (input:t_rawvec 't 'a) (ret  (ptr:Core_Ptr_Unique_Unique_Type.t_unique 't) (cap:Alloc_RawVec_Cap_Type.t_cap) (alloc:'a))= any
    [ good (ptr:Core_Ptr_Unique_Unique_Type.t_unique 't) (cap:Alloc_RawVec_Cap_Type.t_cap) (alloc:'a)-> {C_RawVec ptr cap alloc
      = input}
      (! ret {ptr} {cap} {alloc})
    | bad (ptr:Core_Ptr_Unique_Unique_Type.t_unique 't) (cap:Alloc_RawVec_Cap_Type.t_cap) (alloc:'a)-> {C_RawVec ptr cap alloc
      <> input}
      {false}
      any ]
    
end
module Alloc_Collections_VecDeque_VecDeque_Type
  use Alloc_RawVec_RawVec_Type as Alloc_RawVec_RawVec_Type
  use prelude.UIntSize
  use prelude.Int
  type t_vecdeque 't 'a =
    | C_VecDeque usize usize (Alloc_RawVec_RawVec_Type.t_rawvec 't 'a)
    
  function any_l (_ : 'b) : 'a
  let rec t_vecdeque < 't > < 'a > (input:t_vecdeque 't 'a) (ret  (head:usize) (len:usize) (buf:Alloc_RawVec_RawVec_Type.t_rawvec 't 'a))= any
    [ good (head:usize) (len:usize) (buf:Alloc_RawVec_RawVec_Type.t_rawvec 't 'a)-> {C_VecDeque head len buf = input}
      (! ret {head} {len} {buf})
    | bad (head:usize) (len:usize) (buf:Alloc_RawVec_RawVec_Type.t_rawvec 't 'a)-> {C_VecDeque head len buf <> input}
      {false}
      any ]
    
end
module Alloc_Alloc_Global_Type
  type t_global  =
    | C_Global
    
  function any_l (_ : 'b) : 'a
  let rec t_global (input:t_global) (ret  )= any
    [ good -> {C_Global  = input} (! ret) | bad -> {C_Global  <> input} {false} any ]
    
end
module Core_Option_Option_Type
  type t_option 't =
    | C_None
    | C_Some 't
    
  function any_l (_ : 'b) : 'a
  let rec none < 't > (input:t_option 't) (ret  )= any
    [ good -> {C_None  = input} (! ret) | bad -> {C_None  <> input} {false} any ]
    
  let rec some < 't > (input:t_option 't) (ret  (field_0:'t))= any
    [ good (field_0:'t)-> {C_Some field_0 = input} (! ret {field_0})
    | bad (field_0:'t)-> {C_Some field_0 <> input} {false} any ]
    
end
module Vecdeque_TestDeque
  let%span svecdeque0 = "../vecdeque.rs" 6 55 6 56
  let%span svecdeque1 = "../vecdeque.rs" 9 27 9 28
  let%span svecdeque2 = "../vecdeque.rs" 11 35 11 50
  let%span svecdeque3 = "../vecdeque.rs" 14 27 14 28
  let%span svecdeque4 = "../vecdeque.rs" 19 21 19 22
  let%span svecdeque5 = "../vecdeque.rs" 20 21 20 22
  let%span svecdeque6 = "../vecdeque.rs" 21 20 21 21
  let%span svecdeque7 = "../vecdeque.rs" 5 20 27 1
  let%span svecdeque8 = "../vecdeque.rs" 26 4 26 29
  let%span svecdeque9 = "../vecdeque.rs" 24 4 24 40
  let%span svecdeque10 = "../vecdeque.rs" 23 4 23 41
  let%span svecdeque11 = "../vecdeque.rs" 17 4 17 37
  let%span svecdeque12 = "../vecdeque.rs" 16 4 16 38
  let%span svecdeque13 = "../vecdeque.rs" 14 4 14 29
  let%span svecdeque14 = "../vecdeque.rs" 13 4 13 29
  let%span svecdeque15 = "../vecdeque.rs" 9 4 9 29
  let%span svecdeque16 = "../vecdeque.rs" 8 4 8 29
  let%span svecdeque17 = "../vecdeque.rs" 24 37 24 38
  let%span svecdeque18 = "../vecdeque.rs" 23 38 23 39
  let%span span19 = "../../../../creusot-contracts/src/invariant.rs" 8 8 8 12
  let%span span20 = "" 0 0 0 0
  let%span span21 = "../../../../creusot-contracts/src/std/deque.rs" 12 21 12 25
  let%span span22 = "../../../../creusot-contracts/src/std/deque.rs" 11 14 11 41
  let%span span23 = "../../../../creusot-contracts/src/std/deque.rs" 12 4 12 36
  let%span span24 = "" 0 0 0 0
  let%span span25 = "../../../../creusot-contracts/src/std/deque.rs" 76 26 76 45
  let%span span26 = "../../../../creusot-contracts/src/model.rs" 108 8 108 31
  let%span span27 = "" 0 0 0 0
  let%span span28 = "" 0 0 0 0
  let%span span29 = "../../../../creusot-contracts/src/std/deque.rs" 103 26 103 55
  let%span span30 = "" 0 0 0 0
  let%span span31 = "" 0 0 0 0
  let%span span32 = "../../../../creusot-contracts/src/std/deque.rs" 98 26 98 59
  let%span span33 = "../../../../creusot-contracts/src/std/deque.rs" 99 26 99 73
  let%span span34 = "" 0 0 0 0
  let%span span35 = "../../../../creusot-contracts/src/std/deque.rs" 89 26 94 17
  let%span span36 = "" 0 0 0 0
  let%span span37 = "../../../../creusot-contracts/src/std/num.rs" 22 16 22 35
  let%span span38 = "../../../../creusot-contracts/src/std/option.rs" 10 8 13 9
  let%span span39 = "../../../../creusot-contracts/src/model.rs" 81 8 81 28
  let%span span40 = "" 0 0 0 0
  let%span span41 = "" 0 0 0 0
  let%span span42 = "../../../../creusot-contracts/src/std/option.rs" 22 26 22 75
  let%span span43 = "" 0 0 0 0
  let%span span44 = "../../../../creusot-contracts/src/std/deque.rs" 80 26 85 17
  let%span span45 = "" 0 0 0 0
  let%span span46 = "../../../../creusot-contracts/src/std/deque.rs" 58 26 58 44
  let%span span47 = "../../../../creusot-contracts/src/model.rs" 90 8 90 31
  let%span span48 = "" 0 0 0 0
  let%span span49 = "../../../../creusot-contracts/src/std/deque.rs" 68 26 68 48
  let%span span50 = "" 0 0 0 0
  let%span span51 = "../../../../creusot-contracts/src/std/deque.rs" 72 26 72 54
  let%span span52 = "../../../../creusot-contracts/src/std/deque.rs" 62 26 62 44
  use prelude.UInt32
  use seq.Seq
  predicate invariant'6 (self : Seq.seq uint32) =
    [%#span19] true
  let rec invariant'6 (self:Seq.seq uint32) (return'  (ret:bool))= any
    [ return' (result:bool)-> {result = invariant'6 self} (! return' {result}) ]
    
  predicate inv'6 (_x : Seq.seq uint32)
  let rec inv'6 (_x:Seq.seq uint32) (return'  (ret:bool))= any
    [ return' (result:bool)-> {result = inv'6 _x} (! return' {result}) ]
    
  axiom inv'6 : forall x : Seq.seq uint32 . inv'6 x = true
  use Alloc_Alloc_Global_Type as Alloc_Alloc_Global_Type
  use Alloc_Collections_VecDeque_VecDeque_Type as Alloc_Collections_VecDeque_VecDeque_Type
  predicate invariant'5 (self : Alloc_Collections_VecDeque_VecDeque_Type.t_vecdeque uint32 (Alloc_Alloc_Global_Type.t_global))
    
   =
    [%#span19] true
  let rec invariant'5 (self:Alloc_Collections_VecDeque_VecDeque_Type.t_vecdeque uint32 (Alloc_Alloc_Global_Type.t_global)) (return'  (ret:bool))= any
    [ return' (result:bool)-> {result = invariant'5 self} (! return' {result}) ]
    
  predicate inv'5 (_x : Alloc_Collections_VecDeque_VecDeque_Type.t_vecdeque uint32 (Alloc_Alloc_Global_Type.t_global))
  let rec inv'5 (_x:Alloc_Collections_VecDeque_VecDeque_Type.t_vecdeque uint32 (Alloc_Alloc_Global_Type.t_global)) (return'  (ret:bool))= any
    [ return' (result:bool)-> {result = inv'5 _x} (! return' {result}) ]
    
  axiom inv'5 : forall x : Alloc_Collections_VecDeque_VecDeque_Type.t_vecdeque uint32 (Alloc_Alloc_Global_Type.t_global) . inv'5 x
  = true
  predicate invariant'4 (self : uint32) =
    [%#span19] true
  let rec invariant'4 (self:uint32) (return'  (ret:bool))= any
    [ return' (result:bool)-> {result = invariant'4 self} (! return' {result}) ]
    
  predicate inv'4 (_x : uint32)
  let rec inv'4 (_x:uint32) (return'  (ret:bool))= any
    [ return' (result:bool)-> {result = inv'4 _x} (! return' {result}) ]
    
  axiom inv'4 : forall x : uint32 . inv'4 x = true
  use Core_Option_Option_Type as Core_Option_Option_Type
  predicate invariant'3 (self : Core_Option_Option_Type.t_option uint32) =
    [%#span19] true
  let rec invariant'3 (self:Core_Option_Option_Type.t_option uint32) (return'  (ret:bool))= any
    [ return' (result:bool)-> {result = invariant'3 self} (! return' {result}) ]
    
  predicate inv'3 (_x : Core_Option_Option_Type.t_option uint32)
  let rec inv'3 (_x:Core_Option_Option_Type.t_option uint32) (return'  (ret:bool))= any
    [ return' (result:bool)-> {result = inv'3 _x} (! return' {result}) ]
    
  axiom inv'3 : forall x : Core_Option_Option_Type.t_option uint32 . inv'3 x = true
  predicate invariant'2 (self : Core_Option_Option_Type.t_option uint32) =
    [%#span19] true
  let rec invariant'2 (self:Core_Option_Option_Type.t_option uint32) (return'  (ret:bool))= any
    [ return' (result:bool)-> {result = invariant'2 self} (! return' {result}) ]
    
  predicate inv'2 (_x : Core_Option_Option_Type.t_option uint32)
  let rec inv'2 (_x:Core_Option_Option_Type.t_option uint32) (return'  (ret:bool))= any
    [ return' (result:bool)-> {result = inv'2 _x} (! return' {result}) ]
    
  axiom inv'2 : forall x : Core_Option_Option_Type.t_option uint32 . inv'2 x = true
  use prelude.Borrow
  predicate invariant'1 (self : borrowed (Alloc_Collections_VecDeque_VecDeque_Type.t_vecdeque uint32 (Alloc_Alloc_Global_Type.t_global)))
    
   =
    [%#span19] true
  let rec invariant'1 (self:borrowed (Alloc_Collections_VecDeque_VecDeque_Type.t_vecdeque uint32 (Alloc_Alloc_Global_Type.t_global))) (return'  (ret:bool))= any
    [ return' (result:bool)-> {result = invariant'1 self} (! return' {result}) ]
    
  predicate inv'1 (_x : borrowed (Alloc_Collections_VecDeque_VecDeque_Type.t_vecdeque uint32 (Alloc_Alloc_Global_Type.t_global)))
    
  let rec inv'1 (_x:borrowed (Alloc_Collections_VecDeque_VecDeque_Type.t_vecdeque uint32 (Alloc_Alloc_Global_Type.t_global))) (return'  (ret:bool))= any
    [ return' (result:bool)-> {result = inv'1 _x} (! return' {result}) ]
    
  axiom inv'1 : forall x : borrowed (Alloc_Collections_VecDeque_VecDeque_Type.t_vecdeque uint32 (Alloc_Alloc_Global_Type.t_global)) . inv'1 x
  = true
  predicate invariant'0 (self : Alloc_Collections_VecDeque_VecDeque_Type.t_vecdeque uint32 (Alloc_Alloc_Global_Type.t_global))
    
   =
    [%#span19] true
  let rec invariant'0 (self:Alloc_Collections_VecDeque_VecDeque_Type.t_vecdeque uint32 (Alloc_Alloc_Global_Type.t_global)) (return'  (ret:bool))= any
    [ return' (result:bool)-> {result = invariant'0 self} (! return' {result}) ]
    
  predicate inv'0 (_x : Alloc_Collections_VecDeque_VecDeque_Type.t_vecdeque uint32 (Alloc_Alloc_Global_Type.t_global))
  let rec inv'0 (_x:Alloc_Collections_VecDeque_VecDeque_Type.t_vecdeque uint32 (Alloc_Alloc_Global_Type.t_global)) (return'  (ret:bool))= any
    [ return' (result:bool)-> {result = inv'0 _x} (! return' {result}) ]
    
  axiom inv'0 : forall x : Alloc_Collections_VecDeque_VecDeque_Type.t_vecdeque uint32 (Alloc_Alloc_Global_Type.t_global) . inv'0 x
  = true
  use prelude.Intrinsic
  use seq.Seq
  use prelude.UIntSize
  use prelude.UIntSize
  use prelude.Int
  constant max'0 : usize = [%#span20] (18446744073709551615 : usize)
  function shallow_model'0 (self : Alloc_Collections_VecDeque_VecDeque_Type.t_vecdeque uint32 (Alloc_Alloc_Global_Type.t_global)) : Seq.seq uint32
    
  let rec shallow_model'0 (self:Alloc_Collections_VecDeque_VecDeque_Type.t_vecdeque uint32 (Alloc_Alloc_Global_Type.t_global)) (return'  (ret:Seq.seq uint32))= {[@expl:precondition] [%#span21] inv'5 self}
    any [ return' (result:Seq.seq uint32)-> {result = shallow_model'0 self} (! return' {result}) ] 
  axiom shallow_model'0_spec : forall self : Alloc_Collections_VecDeque_VecDeque_Type.t_vecdeque uint32 (Alloc_Alloc_Global_Type.t_global) . ([%#span21] inv'5 self)
   -> ([%#span23] inv'6 (shallow_model'0 self))
  && ([%#span22] Seq.length (shallow_model'0 self) <= UIntSize.to_int (max'0 : usize))
  let rec clear'0 (self:borrowed (Alloc_Collections_VecDeque_VecDeque_Type.t_vecdeque uint32 (Alloc_Alloc_Global_Type.t_global))) (return'  (ret:()))= {[@expl:precondition] [%#span24] inv'1 self}
    any [ return' (result:())-> {[%#span25] Seq.length (shallow_model'0 ( ^ self)) = 0} (! return' {result}) ] 
  use seq.Seq
  function shallow_model'2 (self : borrowed (Alloc_Collections_VecDeque_VecDeque_Type.t_vecdeque uint32 (Alloc_Alloc_Global_Type.t_global))) : Seq.seq uint32
    
   =
    [%#span26] shallow_model'0 ( * self)
  let rec shallow_model'2 (self:borrowed (Alloc_Collections_VecDeque_VecDeque_Type.t_vecdeque uint32 (Alloc_Alloc_Global_Type.t_global))) (return'  (ret:Seq.seq uint32))= any
    [ return' (result:Seq.seq uint32)-> {result = shallow_model'2 self} (! return' {result}) ]
    
  let rec push_back'0 (self:borrowed (Alloc_Collections_VecDeque_VecDeque_Type.t_vecdeque uint32 (Alloc_Alloc_Global_Type.t_global))) (value:uint32) (return'  (ret:()))= {[@expl:precondition] [%#span28] inv'4 value}
    {[@expl:precondition] [%#span27] inv'1 self}
    any
    [ return' (result:())-> {[%#span29] shallow_model'0 ( ^ self) = Seq.snoc (shallow_model'2 self) value}
      (! return' {result}) ]
    
  use seq.Seq
  use seq.Seq
  let rec push_front'0 (self:borrowed (Alloc_Collections_VecDeque_VecDeque_Type.t_vecdeque uint32 (Alloc_Alloc_Global_Type.t_global))) (value:uint32) (return'  (ret:()))= {[@expl:precondition] [%#span31] inv'4 value}
    {[@expl:precondition] [%#span30] inv'1 self}
    any
    [ return' (result:())-> {[%#span33] shallow_model'0 ( ^ self)
      = Seq.(++) (Seq.singleton value) (shallow_model'2 self)}
      {[%#span32] Seq.length (shallow_model'0 ( ^ self)) = Seq.length (shallow_model'2 self) + 1}
      (! return' {result}) ]
    
  use seq_ext.SeqExt
  let rec pop_back'0 (self:borrowed (Alloc_Collections_VecDeque_VecDeque_Type.t_vecdeque uint32 (Alloc_Alloc_Global_Type.t_global))) (return'  (ret:Core_Option_Option_Type.t_option uint32))= {[@expl:precondition] [%#span34] inv'1 self}
    any
    [ return' (result:Core_Option_Option_Type.t_option uint32)-> {[%#span36] inv'2 result}
      {[%#span35] match result with
        | Core_Option_Option_Type.C_Some t -> shallow_model'0 ( ^ self)
        = SeqExt.subsequence (shallow_model'2 self) 0 (Seq.length (shallow_model'2 self) - 1)
        /\ shallow_model'2 self = Seq.snoc (shallow_model'0 ( ^ self)) t
        | Core_Option_Option_Type.C_None ->  * self =  ^ self /\ Seq.length (shallow_model'2 self) = 0
        end}
      (! return' {result}) ]
    
  use prelude.Int
  use prelude.UInt32
  function deep_model'2 (self : uint32) : int =
    [%#span37] UInt32.to_int self
  let rec deep_model'2 (self:uint32) (return'  (ret:int))= any
    [ return' (result:int)-> {result = deep_model'2 self} (! return' {result}) ]
    
  function deep_model'1 (self : Core_Option_Option_Type.t_option uint32) : Core_Option_Option_Type.t_option int =
    [%#span38] match self with
      | Core_Option_Option_Type.C_Some t -> Core_Option_Option_Type.C_Some (deep_model'2 t)
      | Core_Option_Option_Type.C_None -> Core_Option_Option_Type.C_None
      end
  let rec deep_model'1 (self:Core_Option_Option_Type.t_option uint32) (return'  (ret:Core_Option_Option_Type.t_option int))= any
    [ return' (result:Core_Option_Option_Type.t_option int)-> {result = deep_model'1 self} (! return' {result}) ]
    
  function deep_model'0 (self : Core_Option_Option_Type.t_option uint32) : Core_Option_Option_Type.t_option int =
    [%#span39] deep_model'1 self
  let rec deep_model'0 (self:Core_Option_Option_Type.t_option uint32) (return'  (ret:Core_Option_Option_Type.t_option int))= any
    [ return' (result:Core_Option_Option_Type.t_option int)-> {result = deep_model'0 self} (! return' {result}) ]
    
  let rec eq'0 (self:Core_Option_Option_Type.t_option uint32) (other:Core_Option_Option_Type.t_option uint32) (return'  (ret:bool))= {[@expl:precondition] [%#span41] inv'3 other}
    {[@expl:precondition] [%#span40] inv'3 self}
    any [ return' (result:bool)-> {[%#span42] result = (deep_model'0 self = deep_model'0 other)} (! return' {result}) ] 
  let rec pop_front'0 (self:borrowed (Alloc_Collections_VecDeque_VecDeque_Type.t_vecdeque uint32 (Alloc_Alloc_Global_Type.t_global))) (return'  (ret:Core_Option_Option_Type.t_option uint32))= {[@expl:precondition] [%#span43] inv'1 self}
    any
    [ return' (result:Core_Option_Option_Type.t_option uint32)-> {[%#span45] inv'2 result}
      {[%#span44] match result with
        | Core_Option_Option_Type.C_Some t -> shallow_model'0 ( ^ self)
        = SeqExt.subsequence (shallow_model'2 self) 1 (Seq.length (shallow_model'2 self))
        /\ shallow_model'2 self = Seq.(++) (Seq.singleton t) (shallow_model'0 ( ^ self))
        | Core_Option_Option_Type.C_None ->  * self =  ^ self /\ Seq.length (shallow_model'2 self) = 0
        end}
      (! return' {result}) ]
    
  let rec new'0 (_1:()) (return'  (ret:Alloc_Collections_VecDeque_VecDeque_Type.t_vecdeque uint32 (Alloc_Alloc_Global_Type.t_global)))= any
    [ return' (result:Alloc_Collections_VecDeque_VecDeque_Type.t_vecdeque uint32 (Alloc_Alloc_Global_Type.t_global))-> {[%#span46] Seq.length (shallow_model'0 result)
      = 0}
      (! return' {result}) ]
    
  function shallow_model'1 (self : Alloc_Collections_VecDeque_VecDeque_Type.t_vecdeque uint32 (Alloc_Alloc_Global_Type.t_global)) : Seq.seq uint32
    
   =
    [%#span47] shallow_model'0 self
  let rec shallow_model'1 (self:Alloc_Collections_VecDeque_VecDeque_Type.t_vecdeque uint32 (Alloc_Alloc_Global_Type.t_global)) (return'  (ret:Seq.seq uint32))= any
    [ return' (result:Seq.seq uint32)-> {result = shallow_model'1 self} (! return' {result}) ]
    
  let rec len'0 (self:Alloc_Collections_VecDeque_VecDeque_Type.t_vecdeque uint32 (Alloc_Alloc_Global_Type.t_global)) (return'  (ret:usize))= {[@expl:precondition] [%#span48] inv'0 self}
    any
    [ return' (result:usize)-> {[%#span49] UIntSize.to_int result = Seq.length (shallow_model'1 self)}
      (! return' {result}) ]
    
  let rec is_empty'0 (self:Alloc_Collections_VecDeque_VecDeque_Type.t_vecdeque uint32 (Alloc_Alloc_Global_Type.t_global)) (return'  (ret:bool))= {[@expl:precondition] [%#span50] inv'0 self}
    any [ return' (result:bool)-> {[%#span51] result = (Seq.length (shallow_model'1 self) = 0)} (! return' {result}) ] 
  let rec with_capacity'0 (capacity:usize) (return'  (ret:Alloc_Collections_VecDeque_VecDeque_Type.t_vecdeque uint32 (Alloc_Alloc_Global_Type.t_global)))= any
    [ return' (result:Alloc_Collections_VecDeque_VecDeque_Type.t_vecdeque uint32 (Alloc_Alloc_Global_Type.t_global))-> {[%#span52] Seq.length (shallow_model'0 result)
      = 0}
      (! return' {result}) ]
    
  let rec promoted0 (return'  (ret:Core_Option_Option_Type.t_option uint32))= bb0
    [ bb0 = s0
      [ s0 = 
        [ &_1 <- Core_Option_Option_Type.C_Some ([%#svecdeque17] (3 : uint32)) : Core_Option_Option_Type.t_option uint32 ]
        
        s1
      | s1 =  [ &_0 <- _1 ] s2
      | s2 = return' {_0} ]
       ]
    
    [ & _0 : Core_Option_Option_Type.t_option uint32 = any_l () : Core_Option_Option_Type.t_option uint32
    | & _1 : Core_Option_Option_Type.t_option uint32 = any_l () : Core_Option_Option_Type.t_option uint32 ]
     [ return' (result:Core_Option_Option_Type.t_option uint32)-> return' {result} ] 
  let rec promoted1 (return'  (ret:Core_Option_Option_Type.t_option uint32))= bb0
    [ bb0 = s0
      [ s0 = 
        [ &_1 <- Core_Option_Option_Type.C_Some ([%#svecdeque18] (2 : uint32)) : Core_Option_Option_Type.t_option uint32 ]
        
        s1
      | s1 =  [ &_0 <- _1 ] s2
      | s2 = return' {_0} ]
       ]
    
    [ & _0 : Core_Option_Option_Type.t_option uint32 = any_l () : Core_Option_Option_Type.t_option uint32
    | & _1 : Core_Option_Option_Type.t_option uint32 = any_l () : Core_Option_Option_Type.t_option uint32 ]
     [ return' (result:Core_Option_Option_Type.t_option uint32)-> return' {result} ] 
  let rec promoted2 (return'  (ret:Core_Option_Option_Type.t_option uint32))= bb0
    [ bb0 = s0
      [ s0 =  [ &_1 <- Core_Option_Option_Type.C_None : Core_Option_Option_Type.t_option uint32 ] s1
      | s1 =  [ &_0 <- _1 ] s2
      | s2 = return' {_0} ]
       ]
    
    [ & _0 : Core_Option_Option_Type.t_option uint32 = any_l () : Core_Option_Option_Type.t_option uint32
    | & _1 : Core_Option_Option_Type.t_option uint32 = any_l () : Core_Option_Option_Type.t_option uint32 ]
     [ return' (result:Core_Option_Option_Type.t_option uint32)-> return' {result} ] 
  let rec promoted3 (return'  (ret:Core_Option_Option_Type.t_option uint32))= bb0
    [ bb0 = s0
      [ s0 =  [ &_1 <- Core_Option_Option_Type.C_None : Core_Option_Option_Type.t_option uint32 ] s1
      | s1 =  [ &_0 <- _1 ] s2
      | s2 = return' {_0} ]
       ]
    
    [ & _0 : Core_Option_Option_Type.t_option uint32 = any_l () : Core_Option_Option_Type.t_option uint32
    | & _1 : Core_Option_Option_Type.t_option uint32 = any_l () : Core_Option_Option_Type.t_option uint32 ]
     [ return' (result:Core_Option_Option_Type.t_option uint32)-> return' {result} ] 
  let rec test_deque (_1:()) (return'  (ret:()))= (! bb0
    [ bb0 = s0
      [ s0 = with_capacity'0 {[%#svecdeque0] (5 : usize)}
          (fun (_ret':Alloc_Collections_VecDeque_VecDeque_Type.t_vecdeque uint32 (Alloc_Alloc_Global_Type.t_global)) ->
             [ &deque <- _ret' ] 
            s1)
      | s1 = bb1 ]
      
    | bb1 = s0 [ s0 = is_empty'0 {deque} (fun (_ret':bool) ->  [ &_3 <- _ret' ] s1) | s1 = bb2 ] 
    | bb2 = s0 [ s0 = any [ br0 -> {_3 = false} (! bb4) | br1 -> {_3} (! bb3) ]  ] 
    | bb3 = s0 [ s0 = len'0 {deque} (fun (_ret':usize) ->  [ &_8 <- _ret' ] s1) | s1 = bb5 ] 
    | bb5 = s0
      [ s0 = UIntSize.eq {_8} {[%#svecdeque1] (0 : usize)}
          (fun (_ret':bool) ->  [ &_7 <- _ret' ] (any [ any_ (_any:usize)-> (!  [ &_8 <- _any ] s1) ] ))
      | s1 = any [ br0 -> {_7 = false} (! bb7) | br1 -> {_7} (! bb6) ]  ]
      
    | bb6 = s0
      [ s0 = new'0 {[%#svecdeque2] ()}
          (fun (_ret':Alloc_Collections_VecDeque_VecDeque_Type.t_vecdeque uint32 (Alloc_Alloc_Global_Type.t_global)) ->
             [ &deque1 <- _ret' ] 
            s1)
      | s1 = bb8 ]
      
    | bb8 = s0 [ s0 = is_empty'0 {deque1} (fun (_ret':bool) ->  [ &_13 <- _ret' ] s1) | s1 = bb9 ] 
    | bb9 = s0 [ s0 = any [ br0 -> {_13 = false} (! bb11) | br1 -> {_13} (! bb10) ]  ] 
    | bb10 = s0 [ s0 = len'0 {deque1} (fun (_ret':usize) ->  [ &_18 <- _ret' ] s1) | s1 = bb12 ] 
    | bb12 = s0
      [ s0 = UIntSize.eq {_18} {[%#svecdeque3] (0 : usize)}
          (fun (_ret':bool) ->  [ &_17 <- _ret' ] (any [ any_ (_any:usize)-> (!  [ &_18 <- _any ] s1) ] ))
      | s1 = any [ br0 -> {_17 = false} (! bb14) | br1 -> {_17} (! bb13) ]  ]
      
    | bb13 = s0
      [ s0 = Borrow.borrow_mut
          <Alloc_Collections_VecDeque_VecDeque_Type.t_vecdeque uint32 (Alloc_Alloc_Global_Type.t_global)>
          {deque1}
          (fun (_ret':borrowed (Alloc_Collections_VecDeque_VecDeque_Type.t_vecdeque uint32 (Alloc_Alloc_Global_Type.t_global))) ->
             [ &_25 <- _ret' ] 
             [ &deque1 <-  ^ _25 ] 
            s1)
      | s1 = pop_front'0 {_25} (fun (_ret':Core_Option_Option_Type.t_option uint32) ->  [ &_24 <- _ret' ] s2)
      | s2 = bb15 ]
      
    | bb15 = s0
      [ s0 = promoted3 (fun (pr3:Core_Option_Option_Type.t_option uint32) ->  [ &_68 <- pr3 ] s1)
      | s1 = eq'0 {_24} {_68} (fun (_ret':bool) ->  [ &_22 <- _ret' ] s2)
      | s2 = bb16 ]
      
    | bb16 = s0 [ s0 = any [ br0 -> {_22 = false} (! bb18) | br1 -> {_22} (! bb17) ]  ] 
    | bb17 = s0
      [ s0 = Borrow.borrow_mut
          <Alloc_Collections_VecDeque_VecDeque_Type.t_vecdeque uint32 (Alloc_Alloc_Global_Type.t_global)>
          {deque1}
          (fun (_ret':borrowed (Alloc_Collections_VecDeque_VecDeque_Type.t_vecdeque uint32 (Alloc_Alloc_Global_Type.t_global))) ->
             [ &_33 <- _ret' ] 
             [ &deque1 <-  ^ _33 ] 
            s1)
      | s1 = pop_back'0 {_33} (fun (_ret':Core_Option_Option_Type.t_option uint32) ->  [ &_32 <- _ret' ] s2)
      | s2 = bb19 ]
      
    | bb19 = s0
      [ s0 = promoted2 (fun (pr2:Core_Option_Option_Type.t_option uint32) ->  [ &_67 <- pr2 ] s1)
      | s1 = eq'0 {_32} {_67} (fun (_ret':bool) ->  [ &_30 <- _ret' ] s2)
      | s2 = bb20 ]
      
    | bb20 = s0 [ s0 = any [ br0 -> {_30 = false} (! bb22) | br1 -> {_30} (! bb21) ]  ] 
    | bb21 = s0
      [ s0 = Borrow.borrow_mut
          <Alloc_Collections_VecDeque_VecDeque_Type.t_vecdeque uint32 (Alloc_Alloc_Global_Type.t_global)>
          {deque1}
          (fun (_ret':borrowed (Alloc_Collections_VecDeque_VecDeque_Type.t_vecdeque uint32 (Alloc_Alloc_Global_Type.t_global))) ->
             [ &_38 <- _ret' ] 
             [ &deque1 <-  ^ _38 ] 
            s1)
      | s1 = push_front'0 {_38} {[%#svecdeque4] (1 : uint32)} (fun (_ret':()) ->  [ &_37 <- _ret' ] s2)
      | s2 = bb23 ]
      
    | bb23 = s0
      [ s0 = Borrow.borrow_mut
          <Alloc_Collections_VecDeque_VecDeque_Type.t_vecdeque uint32 (Alloc_Alloc_Global_Type.t_global)>
          {deque1}
          (fun (_ret':borrowed (Alloc_Collections_VecDeque_VecDeque_Type.t_vecdeque uint32 (Alloc_Alloc_Global_Type.t_global))) ->
             [ &_40 <- _ret' ] 
             [ &deque1 <-  ^ _40 ] 
            s1)
      | s1 = push_front'0 {_40} {[%#svecdeque5] (2 : uint32)} (fun (_ret':()) ->  [ &_39 <- _ret' ] s2)
      | s2 = bb24 ]
      
    | bb24 = s0
      [ s0 = Borrow.borrow_mut
          <Alloc_Collections_VecDeque_VecDeque_Type.t_vecdeque uint32 (Alloc_Alloc_Global_Type.t_global)>
          {deque1}
          (fun (_ret':borrowed (Alloc_Collections_VecDeque_VecDeque_Type.t_vecdeque uint32 (Alloc_Alloc_Global_Type.t_global))) ->
             [ &_42 <- _ret' ] 
             [ &deque1 <-  ^ _42 ] 
            s1)
      | s1 = push_back'0 {_42} {[%#svecdeque6] (3 : uint32)} (fun (_ret':()) ->  [ &_41 <- _ret' ] s2)
      | s2 = bb25 ]
      
    | bb25 = s0
      [ s0 = Borrow.borrow_mut
          <Alloc_Collections_VecDeque_VecDeque_Type.t_vecdeque uint32 (Alloc_Alloc_Global_Type.t_global)>
          {deque1}
          (fun (_ret':borrowed (Alloc_Collections_VecDeque_VecDeque_Type.t_vecdeque uint32 (Alloc_Alloc_Global_Type.t_global))) ->
             [ &_47 <- _ret' ] 
             [ &deque1 <-  ^ _47 ] 
            s1)
      | s1 = pop_front'0 {_47} (fun (_ret':Core_Option_Option_Type.t_option uint32) ->  [ &_46 <- _ret' ] s2)
      | s2 = bb26 ]
      
    | bb26 = s0
      [ s0 = promoted1 (fun (pr1:Core_Option_Option_Type.t_option uint32) ->  [ &_66 <- pr1 ] s1)
      | s1 = eq'0 {_46} {_66} (fun (_ret':bool) ->  [ &_44 <- _ret' ] s2)
      | s2 = bb27 ]
      
    | bb27 = s0 [ s0 = any [ br0 -> {_44 = false} (! bb29) | br1 -> {_44} (! bb28) ]  ] 
    | bb28 = s0
      [ s0 = Borrow.borrow_mut
          <Alloc_Collections_VecDeque_VecDeque_Type.t_vecdeque uint32 (Alloc_Alloc_Global_Type.t_global)>
          {deque1}
          (fun (_ret':borrowed (Alloc_Collections_VecDeque_VecDeque_Type.t_vecdeque uint32 (Alloc_Alloc_Global_Type.t_global))) ->
             [ &_55 <- _ret' ] 
             [ &deque1 <-  ^ _55 ] 
            s1)
      | s1 = pop_back'0 {_55} (fun (_ret':Core_Option_Option_Type.t_option uint32) ->  [ &_54 <- _ret' ] s2)
      | s2 = bb30 ]
      
    | bb30 = s0
      [ s0 = promoted0 (fun (pr0:Core_Option_Option_Type.t_option uint32) ->  [ &_65 <- pr0 ] s1)
      | s1 = eq'0 {_54} {_65} (fun (_ret':bool) ->  [ &_52 <- _ret' ] s2)
      | s2 = bb31 ]
      
    | bb31 = s0 [ s0 = any [ br0 -> {_52 = false} (! bb33) | br1 -> {_52} (! bb32) ]  ] 
    | bb32 = s0
      [ s0 = Borrow.borrow_mut
          <Alloc_Collections_VecDeque_VecDeque_Type.t_vecdeque uint32 (Alloc_Alloc_Global_Type.t_global)>
          {deque1}
          (fun (_ret':borrowed (Alloc_Collections_VecDeque_VecDeque_Type.t_vecdeque uint32 (Alloc_Alloc_Global_Type.t_global))) ->
             [ &_60 <- _ret' ] 
             [ &deque1 <-  ^ _60 ] 
            s1)
      | s1 = clear'0 {_60} (fun (_ret':()) ->  [ &_59 <- _ret' ] s2)
      | s2 = bb34 ]
      
    | bb34 = s0 [ s0 = is_empty'0 {deque1} (fun (_ret':bool) ->  [ &_62 <- _ret' ] s1) | s1 = bb35 ] 
    | bb35 = s0 [ s0 = any [ br0 -> {_62 = false} (! bb37) | br1 -> {_62} (! bb36) ]  ] 
    | bb36 = s0 [ s0 =  [ &_0 <- [%#svecdeque7] () ] s1 | s1 = bb38 ] 
    | bb38 = s0 [ s0 = bb39 ] 
    | bb39 = s0 [ s0 = return' {_0} ] 
    | bb37 = s0 [ s0 = {[%#svecdeque8] false} any ] 
    | bb33 = s0 [ s0 = {[%#svecdeque9] false} any ] 
    | bb29 = s0 [ s0 = {[%#svecdeque10] false} any ] 
    | bb22 = s0 [ s0 = {[%#svecdeque11] false} any ] 
    | bb18 = s0 [ s0 = {[%#svecdeque12] false} any ] 
    | bb14 = s0 [ s0 = {[%#svecdeque13] false} any ] 
    | bb11 = s0 [ s0 = {[%#svecdeque14] false} any ] 
    | bb7 = s0 [ s0 = {[%#svecdeque15] false} any ] 
    | bb4 = s0 [ s0 = {[%#svecdeque16] false} any ]  ]
    )
    [ & _0 : () = any_l () : ()
    | & deque : Alloc_Collections_VecDeque_VecDeque_Type.t_vecdeque uint32 (Alloc_Alloc_Global_Type.t_global) = any_l () : Alloc_Collections_VecDeque_VecDeque_Type.t_vecdeque uint32 (Alloc_Alloc_Global_Type.t_global)
    | & _3 : bool = any_l () : bool
    | & _7 : bool = any_l () : bool
    | & _8 : usize = any_l () : usize
    | & deque1 : Alloc_Collections_VecDeque_VecDeque_Type.t_vecdeque uint32 (Alloc_Alloc_Global_Type.t_global) = any_l () : Alloc_Collections_VecDeque_VecDeque_Type.t_vecdeque uint32 (Alloc_Alloc_Global_Type.t_global)
    | & _13 : bool = any_l () : bool
    | & _17 : bool = any_l () : bool
    | & _18 : usize = any_l () : usize
    | & _22 : bool = any_l () : bool
    | & _24 : Core_Option_Option_Type.t_option uint32 = any_l () : Core_Option_Option_Type.t_option uint32
    | & _25 : borrowed (Alloc_Collections_VecDeque_VecDeque_Type.t_vecdeque uint32 (Alloc_Alloc_Global_Type.t_global)) = any_l () : borrowed (Alloc_Collections_VecDeque_VecDeque_Type.t_vecdeque uint32 (Alloc_Alloc_Global_Type.t_global))
    | & _30 : bool = any_l () : bool
    | & _32 : Core_Option_Option_Type.t_option uint32 = any_l () : Core_Option_Option_Type.t_option uint32
    | & _33 : borrowed (Alloc_Collections_VecDeque_VecDeque_Type.t_vecdeque uint32 (Alloc_Alloc_Global_Type.t_global)) = any_l () : borrowed (Alloc_Collections_VecDeque_VecDeque_Type.t_vecdeque uint32 (Alloc_Alloc_Global_Type.t_global))
    | & _37 : () = any_l () : ()
    | & _38 : borrowed (Alloc_Collections_VecDeque_VecDeque_Type.t_vecdeque uint32 (Alloc_Alloc_Global_Type.t_global)) = any_l () : borrowed (Alloc_Collections_VecDeque_VecDeque_Type.t_vecdeque uint32 (Alloc_Alloc_Global_Type.t_global))
    | & _39 : () = any_l () : ()
    | & _40 : borrowed (Alloc_Collections_VecDeque_VecDeque_Type.t_vecdeque uint32 (Alloc_Alloc_Global_Type.t_global)) = any_l () : borrowed (Alloc_Collections_VecDeque_VecDeque_Type.t_vecdeque uint32 (Alloc_Alloc_Global_Type.t_global))
    | & _41 : () = any_l () : ()
    | & _42 : borrowed (Alloc_Collections_VecDeque_VecDeque_Type.t_vecdeque uint32 (Alloc_Alloc_Global_Type.t_global)) = any_l () : borrowed (Alloc_Collections_VecDeque_VecDeque_Type.t_vecdeque uint32 (Alloc_Alloc_Global_Type.t_global))
    | & _44 : bool = any_l () : bool
    | & _46 : Core_Option_Option_Type.t_option uint32 = any_l () : Core_Option_Option_Type.t_option uint32
    | & _47 : borrowed (Alloc_Collections_VecDeque_VecDeque_Type.t_vecdeque uint32 (Alloc_Alloc_Global_Type.t_global)) = any_l () : borrowed (Alloc_Collections_VecDeque_VecDeque_Type.t_vecdeque uint32 (Alloc_Alloc_Global_Type.t_global))
    | & _52 : bool = any_l () : bool
    | & _54 : Core_Option_Option_Type.t_option uint32 = any_l () : Core_Option_Option_Type.t_option uint32
    | & _55 : borrowed (Alloc_Collections_VecDeque_VecDeque_Type.t_vecdeque uint32 (Alloc_Alloc_Global_Type.t_global)) = any_l () : borrowed (Alloc_Collections_VecDeque_VecDeque_Type.t_vecdeque uint32 (Alloc_Alloc_Global_Type.t_global))
    | & _59 : () = any_l () : ()
    | & _60 : borrowed (Alloc_Collections_VecDeque_VecDeque_Type.t_vecdeque uint32 (Alloc_Alloc_Global_Type.t_global)) = any_l () : borrowed (Alloc_Collections_VecDeque_VecDeque_Type.t_vecdeque uint32 (Alloc_Alloc_Global_Type.t_global))
    | & _62 : bool = any_l () : bool
    | & _65 : Core_Option_Option_Type.t_option uint32 = any_l () : Core_Option_Option_Type.t_option uint32
    | & _66 : Core_Option_Option_Type.t_option uint32 = any_l () : Core_Option_Option_Type.t_option uint32
    | & _67 : Core_Option_Option_Type.t_option uint32 = any_l () : Core_Option_Option_Type.t_option uint32
    | & _68 : Core_Option_Option_Type.t_option uint32 = any_l () : Core_Option_Option_Type.t_option uint32 ]
     [ return' (result:())-> (! return' {result}) ] 
end

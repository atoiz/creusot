
module C691_Foo_Type
  use prelude.UInt32
  use prelude.Int
  type t_foo  =
    | C_Foo uint32
    
  function any_l (_ : 'b) : 'a
  let rec t_foo (input:t_foo) (ret  (bar:uint32))= any
    [ good (bar:uint32)-> {C_Foo bar = input} (! ret {bar}) | bad (bar:uint32)-> {C_Foo bar <> input} {false} any ]
    
  function foo_bar (self : t_foo) : uint32 =
    match self with
      | C_Foo a -> a
      end
end
module C691_Example_Closure0_Type
  use prelude.Int8
  use C691_Foo_Type as Foo'0
  use prelude.Borrow
  type c691_example_closure0  =
    | C691_example_closure0 (Foo'0.t_foo)
    
  let rec c691_example_closure0 (input:c691_example_closure0) (ret  (c:Foo'0.t_foo))= any
    [ good (c:Foo'0.t_foo)-> {C691_example_closure0 c = input} (! ret {c})
    | bad (c:Foo'0.t_foo)-> {C691_example_closure0 c <> input} {false} any ]
    
end
module C691_Example_Closure0
  let%span s6910 = "../691.rs" 10 24 10 37
  use C691_Foo_Type as Foo'0
  use prelude.Int8
  use C691_Example_Closure0_Type as Closure'0
  use prelude.Borrow
  use prelude.UInt32
  use prelude.Int
  use C691_Foo_Type as C691_Foo_Type
  function field_0'0 [#"../691.rs" 10 12 10 39] (self : Closure'0.c691_example_closure0) : Foo'0.t_foo =
    let Closure'0.C691_example_closure0 a = self in a
  let rec field_0'0 (self:Closure'0.c691_example_closure0) (return'  (ret:Foo'0.t_foo))= any
    [ return' (result:Foo'0.t_foo)-> {result = field_0'0 self} (! return' {result}) ]
    
  use prelude.Intrinsic
  let rec c691_example_closure0 (_1:Closure'0.c691_example_closure0) (return'  (ret:()))= {[%#s6910] C691_Foo_Type.foo_bar (field_0'0 _1)
    = (2 : uint32)}
    (! bb0 [ bb0 = s0 [ s0 =  [ &res <- () ] s1 | s1 =  [ &_0 <- res ] s2 | s2 = return' {_0} ]  ] )
    [ & _0 : () = any_l () | & res : () = any_l () ]
     [ return' (result:())-> (! return' {result}) ] 
end
module C691_Example
  let%span s6910 = "../691.rs" 9 23 9 27
  let%span s6911 = "../691.rs" 8 17 12 1
  use prelude.Intrinsic
  use C691_Foo_Type as Foo'0
  use prelude.Int8
  use C691_Example_Closure0_Type as Closure'0
  predicate resolve'0 [#"../691.rs" 10 12 10 39] (_1 : Closure'0.c691_example_closure0) =
    true
  use prelude.UInt32
  use prelude.Int
  let rec example (_1:()) (return'  (ret:()))= (! bb0
    [ bb0 = s0
      [ s0 =  [ &c <- Foo'0.C_Foo ([%#s6910] (2 : uint32)) ] s1
      | s1 =  [ &_2 <- Closure'0.C691_example_closure0 c ] s2
      | s2 = -{resolve'0 _2}- s3
      | s3 =  [ &_0 <- [%#s6911] () ] s4
      | s4 = return' {_0} ]
       ]
    ) [ & _0 : () = any_l () | & c : Foo'0.t_foo = any_l () | & _2 : Closure'0.c691_example_closure0 = any_l () ] 
    [ return' (result:())-> (! return' {result}) ]
    
end

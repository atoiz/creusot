
module MinusAssoc_F
  let%span sminus_assoc0 = "../minus_assoc.rs" 6 11 6 13
  let%span sminus_assoc1 = "../minus_assoc.rs" 5 10 5 26
  use prelude.Int
  use prelude.Intrinsic
  let rec f (_1:()) (return'  (ret:()))= (! bb0
    [ bb0 = s0 [ s0 =  [ &_0 <- [%#sminus_assoc0] () ] s1 | s1 = return' {_0} ]  ]
    ) [ & _0 : () = any_l () : () ] 
    [ return' (result:())-> {[@expl:postcondition] [%#sminus_assoc1] 0 - (1 - 1) = 0} (! return' {result}) ]
    
end
